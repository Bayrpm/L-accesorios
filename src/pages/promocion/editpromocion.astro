---
import AdminLayout from '../../layouts/Admin-Layout.astro';
import { supabase } from '../lib/supabase';

const idpromocion = Astro.url.searchParams.get('id');
let promocion = {
  idpromocion: 0,
  nombre: '',
  descripcion: '',
  descuento: 0,
  valido_desde: '',
  valido_hasta: '',
  promociones_productos: [],
};
let loading = true;
let error = null;

const fetchPromocion = async () => {
  try {
    const response = await fetch(`https://api-promociones.vercel.app/API/promocion/getById?id=${idpromocion}`);
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    promocion = {
      idpromocion: data.idpromocion || 0,
      nombre: data.nombre || '',
      descripcion: data.descripcion || '',
      descuento: data.descuento || 0,
      valido_desde: data.valido_desde ? data.valido_desde.split('T')[0] : '',
      valido_hasta: data.valido_hasta ? data.valido_hasta.split('T')[0] : '',
      promociones_productos: data.promociones_productos || [],
    };
  } catch (err) {
    error = err;
  } finally {
    loading = false;
  }
};

await fetchPromocion();
---

<AdminLayout>
  <main class="p-4 sm:ml-64">
    <div class="border-gray-200 border-dashed rounded-lg dark:border-gray-700 mt-14">
      {loading ? (
        <p>Loading...</p>
      ) : error ? (
        <p>Error: {error.message}</p>
      ) : (
        <form id="editarPromocionForm" class="space-y-6">
          <div>
            <label for="idpromocion" id="idpromocionLabel" class="block text-sm font-medium text-gray-700">ID Promoci칩n</label>
            <input type="text" id="idpromocion" readonly value={promocion.idpromocion} class="mt-1 block w-full" />
          </div>
          <div>
            <label for="nombre" class="block text-sm font-medium text-gray-700">Nombre</label>
            <input type="text" id="nombre" name="nombre" value={promocion.nombre} class="mt-1 block w-full" />
          </div>
          <div>
            <label for="descripcion" class="block text-sm font-medium text-gray-700">Descripci칩n</label>
            <textarea id="descripcion" name="descripcion" class="mt-1 block w-full">{promocion.descripcion}</textarea>
          </div>
          <div>
            <label for="descuento" class="block text-sm font-medium text-gray-700">Descuento</label>
            <input type="number" id="descuento" name="descuento" value={promocion.descuento} class="mt-1 block w-full" />
          </div>
          <div>
            <label for="valido_desde" class="block text-sm font-medium text-gray-700">V치lido Desde</label>
            <input type="date" id="valido_desde" name="valido_desde" value={promocion.valido_desde} class="mt-1 block w-full" />
          </div>
          <div>
            <label for="valido_hasta" class="block text-sm font-medium text-gray-700">V치lido Hasta</label>
            <input type="date" id="valido_hasta" name="valido_hasta" value={promocion.valido_hasta} class="mt-1 block w-full" />
          </div>
          <div>
            <label for="productos" class="block text-sm font-medium text-gray-700">Productos</label>
            <input type="text" id="productos" name="productos" value={promocion.promociones_productos.map(p => p.idproducto).join(', ')} class="mt-1 block w-full" />
          </div>
          <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Guardar</button>
        </form>
      )}
    </div>
  </main>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.getElementById('editarPromocionForm').addEventListener('submit', handleSubmit);
    });

    async function handleSubmit(event) {
      event.preventDefault();

      const idpromocion = document.getElementById('idpromocion').value;
      const promocion = {
        nombre: document.getElementById('nombre').value,
        descripcion: document.getElementById('descripcion').value,
        descuento: document.getElementById('descuento').value,
        valido_desde: document.getElementById('valido_desde').value,
        valido_hasta: document.getElementById('valido_hasta').value,
        promociones_productos: document.getElementById('productos').value.split(', ').map(id => ({ idproducto: id })),
      };

      try {
        const token = localStorage.getItem('supabase.auth.token');
        const response = await fetch(`https://api-promociones.vercel.app/API/promocion/PUT?id=${idpromocion}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`,
          },
          body: JSON.stringify(promocion),
          mode: 'cors',
        });
        if (!response.ok) {
          throw new Error(`Network response was not ok: ${response.statusText}`);
        }
        window.location.href = '/promocion/crudpromociones';
      } catch (error) {
        console.error('Error updating promotion:', error);
        alert(`Error updating promotion: ${error.message}`);
      }
    }
  </script>
</AdminLayout>
